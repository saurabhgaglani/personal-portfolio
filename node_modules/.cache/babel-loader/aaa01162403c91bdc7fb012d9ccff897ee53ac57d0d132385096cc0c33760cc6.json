{"ast":null,"code":"var _jsxFileName = \"/home/sgaglani/personal-portfolio/src/components/Typewriter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Typewriter = () => {\n  _s();\n  const strings = ['Full Stack Developer', 'Mobile App Developer', 'ReactJS', 'MongoDB', 'NodeJS', 'ExpressJS', 'NextJS', 'Figma'];\n  const [currentStringIndex, setCurrentStringIndex] = useState(0);\n  const [currentString, setCurrentString] = useState('');\n  const [isTyping, setIsTyping] = useState(true);\n  useEffect(() => {\n    if (isTyping) {\n      if (currentString === strings[currentStringIndex]) {\n        setTimeout(() => {\n          setIsTyping(false);\n        }, 500); // Adjust the pause duration before erasing (in milliseconds)\n      } else {\n        const timeout = setTimeout(() => {\n          setCurrentString(strings[currentStringIndex].slice(0, currentString.length + 1));\n        }, 100); // Adjust the typing speed here (in milliseconds)\n\n        return () => clearTimeout(timeout);\n      }\n    } else {\n      if (currentString === '') {\n        setCurrentStringIndex(prevIndex => (prevIndex + 1) % strings.length);\n        setIsTyping(true);\n      } else {\n        const timeout = setTimeout(() => {\n          setCurrentString(currentString.slice(0, currentString.length - 1));\n        }, 50); // Adjust the erasing speed here (in milliseconds)\n\n        return () => clearTimeout(timeout);\n      }\n    }\n  }, [currentString, currentStringIndex, isTyping]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"font-[500] dark:font-[400] text-black dark:text-[#ec6e59;] text-[1.5rem] mb-2 sm:text-[2rem]\",\n    children: currentString\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Typewriter, \"m0M3zaRiHKMJ++6nf8AV55ESkro=\");\n_c = Typewriter;\nexport default Typewriter;\nvar _c;\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Typewriter","_s","strings","currentStringIndex","setCurrentStringIndex","currentString","setCurrentString","isTyping","setIsTyping","setTimeout","timeout","slice","length","clearTimeout","prevIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sgaglani/personal-portfolio/src/components/Typewriter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Typewriter = () => {\n  const strings = [\n    'Full Stack Developer',\n    'Mobile App Developer',\n    'ReactJS',\n    'MongoDB',\n    'NodeJS',\n    'ExpressJS',\n    'NextJS',\n    'Figma',\n  ];\n  const [currentStringIndex, setCurrentStringIndex] = useState(0);\n  const [currentString, setCurrentString] = useState('');\n  const [isTyping, setIsTyping] = useState(true);\n\n  useEffect(() => {\n    if (isTyping) {\n      if (currentString === strings[currentStringIndex]) {\n        setTimeout(() => {\n          setIsTyping(false);\n        }, 500); // Adjust the pause duration before erasing (in milliseconds)\n      } else {\n        const timeout = setTimeout(() => {\n          setCurrentString(strings[currentStringIndex].slice(0, currentString.length + 1));\n        }, 100); // Adjust the typing speed here (in milliseconds)\n\n        return () => clearTimeout(timeout);\n      }\n    } else {\n      if (currentString === '') {\n        setCurrentStringIndex((prevIndex) => (prevIndex + 1) % strings.length);\n        setIsTyping(true);\n      } else {\n        const timeout = setTimeout(() => {\n          setCurrentString(currentString.slice(0, currentString.length - 1));\n        }, 50); // Adjust the erasing speed here (in milliseconds)\n\n        return () => clearTimeout(timeout);\n      }\n    }\n  }, [currentString, currentStringIndex, isTyping]);\n\n  return (\n    <span className=\"font-[500] dark:font-[400] text-black dark:text-[#ec6e59;] text-[1.5rem] mb-2 sm:text-[2rem]\">\n      {currentString}\n    </span>\n  );\n};\n\nexport default Typewriter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAG,CACd,sBAAsB,EACtB,sBAAsB,EACtB,SAAS,EACT,SAAS,EACT,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,OAAO,CACR;EACD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,EAAE;MACZ,IAAIF,aAAa,KAAKH,OAAO,CAACC,kBAAkB,CAAC,EAAE;QACjDM,UAAU,CAAC,MAAM;UACfD,WAAW,CAAC,KAAK,CAAC;QACpB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX,CAAC,MAAM;QACL,MAAME,OAAO,GAAGD,UAAU,CAAC,MAAM;UAC/BH,gBAAgB,CAACJ,OAAO,CAACC,kBAAkB,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAEN,aAAa,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC;QAClF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;QAET,OAAO,MAAMC,YAAY,CAACH,OAAO,CAAC;MACpC;IACF,CAAC,MAAM;MACL,IAAIL,aAAa,KAAK,EAAE,EAAE;QACxBD,qBAAqB,CAAEU,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIZ,OAAO,CAACU,MAAM,CAAC;QACtEJ,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACL,MAAME,OAAO,GAAGD,UAAU,CAAC,MAAM;UAC/BH,gBAAgB,CAACD,aAAa,CAACM,KAAK,CAAC,CAAC,EAAEN,aAAa,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC;QACpE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;QAER,OAAO,MAAMC,YAAY,CAACH,OAAO,CAAC;MACpC;IACF;EACF,CAAC,EAAE,CAACL,aAAa,EAAEF,kBAAkB,EAAEI,QAAQ,CAAC,CAAC;EAEjD,oBACER,OAAA;IAAMgB,SAAS,EAAC,8FAA8F;IAAAC,QAAA,EAC3GX;EAAa;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACnB,EAAA,CA/CID,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}